08130448430

1.anagrams
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Anagrams
{
    class Program
    {
        static void Main(string[] args)
        {
            //program to check if two strings are anagram
            Console.WriteLine("Enter the first word of your choice");
            string firstString = Console.ReadLine();

            Console.Write("Enter the second word of your choice");
            string secondString = Console.ReadLine();

            // then converts each of the words /strings to character arrays
            char[] xter1 = firstString.ToLower().ToCharArray();
            char[] xter2 = secondString.ToLower().ToCharArray();

         
            //sorts the array of each of the characters created
            Array.Sort(xter1);
            Array.Sort(xter2);

            //create a new insatnce of the charcters using new words/strings
            string newOneString = new string(xter1);
            string newTwoString = new string(xter2);


                //statemnts to verify whether they are instagrams or not

            if (newOneString == newTwoString)
            {
                Console.WriteLine("the words are good and real anagrams");
            }
            else
            {
                Console.WriteLine("these words aint anagrams dude!!!");
            }


            Console.ReadLine();
                


        }
    }
}


2.Linked List
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LinkedList
{
    class Program
    {
        static void Main(string[] args)
        {
            LinkedList<string> myLinkedList = new LinkedList<string>();

            //linked list involves adding last and adding first items
            myLinkedList.AddLast("Geek");
            myLinkedList.AddFirst("coding");
            myLinkedList.AddLast("Planet Nest");
            myLinkedList.AddLast("Dev-Crib");
            myLinkedList.AddFirst("Dev-District");

            foreach (var item in myLinkedList)
            {
                Console.WriteLine(item);
            }

            Console.ReadLine();
        }

    }
}


3.armstrong

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace armstrongNumber
{
    class Program
    {
        static void Main(string[] args)
        {

            //An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself
            //firstly initialize a number, a remainder and its sum
            int number, armChecknum, sum = 0;
            Console.Write("Enter a number : ");
            number = int.Parse(Console.ReadLine());

           
            for (int j = number; j > 0; j = j / 10)
            {
                armChecknum = i % 10;
                sum = sum + armChecknum * armChecknum * armChecknum;
            }

            if (sum == number)
            {
                Console.Write("The number entered is an armstrong number");
            }
            else
                Console.Write("the number entered is not an armstrong number");


            Console.ReadLine();
        }
    }
}


4.merge sorting

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MergeSort
{
    class Program
    {
        static void Main(string[] args)
        {
            // a c# program to implement merge sorting
            Console.Write("\nProgram for sorting a numeric array using Merge Sorting");
            Console.Write("\n\nEnter number of elements: ");
            int max = Convert.ToInt32(Console.ReadLine());
            int[] numbers = new int[max];



            for (int i = 0; i < max; i++)
            {
                Console.Write("\nEnter [" + (i + 1).ToString() + "] element: ");
                numbers[i] = Convert.ToInt32(Console.ReadLine());
            }

            Console.Write("Input int array : ");
            Console.Write("\n");
            for (int k = 0; k < max; k++)
            {
                Console.Write(numbers[k] + " ");
                Console.Write("\n");
            }
            Console.WriteLine("MergeSort By Recursive Method");
            SortMerge(numbers, 0, max - 1);
            for (int i = 0; i < max; i++)
                Console.WriteLine(numbers[i]);
            Console.ReadLine();
        }


        //the merging sort takes action in this place
        private static void SortMerge(int[] numbers, int left, int right)
        {
            int mid;

            if (right > left)
            {
                mid = (right + left) / 2;
                SortMerge(numbers, left, mid);
                SortMerge(numbers, (mid + 1), right);

                MainMerge(numbers, left, (mid + 1), right);
            }

        }

        private static void MainMerge(int[] numbers, int left, int mid, int right)
        {
            int[] temp = new int[25];
            int i, eol, num, pos;

            eol = (mid - 1);
            pos = left;
            num = (right - left + 1);

            while ((left <= eol) && (mid <= right))
            {
                if (numbers[left] <= numbers[mid])
                    temp[pos++] = numbers[left++];
                else
                    temp[pos++] = numbers[mid++];
            }

            while (left <= eol)
                temp[pos++] = numbers[left++];

            while (mid <= right)
                temp[pos++] = numbers[mid++];

            for (i = 0; i < num; i++)
            {
                numbers[right] = temp[right];
                right--;
            }
        
    }
    }
}


5.duplicate number array

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DuplicateNumberArray
{
    class Program
    {
        static void Main(string[] args)
        {
           // int[] myArray = new int[100];

            int[] myArray = {1,2, 3, 4, 5, 5, 6, 7, 9, 10,
                               11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                               21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                               31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                                41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
                               51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
                                61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
                               71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
                               81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
                               91, 92, 93, 94, 95, 96, 97, 98, 99, 100};
            //int[] myArray = new int[100];

            //for (int i = 0; i < 100; i++)
            //{
               
            //}

            var dict = new Dictionary<int, int>();

            foreach (var checkNumber in myArray)
            {
                if (dict.ContainsKey(checkNumber))
                    dict[checkNumber]++;
                else
                    dict[checkNumber] = 1;
            }

            foreach (var pair in dict)
                Console.WriteLine("Value {0} occurred {1} times.", pair.Key, pair.Value);
            Console.ReadKey();

        }
    }
    
}

